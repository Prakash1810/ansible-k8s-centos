---
- name: Stop firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no  

- name: Disable SE Linux
  selinux:
    state: disabled 
    
- name: Create /etc/yum.repos.d/kubernetes.repo
  copy:
    src: k8s-repo
    dest: /etc/yum.repos.d/kubernetes.repo
    mode: 0644

- name: Create /etc/modules-load.d/overlay.conf
  copy:
    src: overlay.conf
    dest: /etc/modules-load.d/overlay.conf
    mode: 0644
    
- name: Create /etc/modules-load.d/ip_vs.conf
  copy:
    src: ip_vs.conf
    dest: /etc/modules-load.d/ip_vs.conf
    mode: 0644
  
- name: Update package cache
  package:
    update_cache: true
    
- name: Install packages
  package:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - bind-utils
    - yum-utils
    - nfs-utils
    - unzip
    - openssl
    - git
    - glusterfs-client
   
- name: ModProbe ip_vs
  modprobe:
    name: ip_vs
    state: present    

- name: ModProbe ip_vs_rr
  modprobe:
    name: ip_vs_rr
    state: present   

- name: ModProbe ip_vs_wrr
  modprobe:
    name: ip_vs_wrr
    state: present   

- name: ModProbe ip_vs_sh
  modprobe:
    name: ip_vs_sh
    state: present  
    
- name: ModProbe dm_thin_pool    
  modprobe:
    name: dm_thin_pool
    state: present    

- name: ModProbe overlay
  modprobe:
    name: overlay
    state: present 
    
- name: Install Docker
  block:

  - name: Add Docker repo
    shell: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
    args:
      chdir: "/tmp"
    environment:
      http_proxy: "{{k8s_http_proxy_server}}"
      https_proxy: "{{k8s_http_proxy_server}}"      

#  - name: Add Docker repository
#    yum_repository:
#      name: docker-ce
#      description: Docker CE repo
#      baseurl: https://download.docker.com/linux/centos/docker-ce.repo

    #- name: Create /etc/yum.repos.d/docker.repo
    #  copy:
    #    src: docker.repo
    #    dest: /etc/yum.repos.d/docker.repo
    #    owner: root
    #    group: root
    #    mode: 0644 

  - name: Install docker
    package:
      name: "{{k8s_docker_pkg}}"

  - name: Start docker
    service:
      name: docker
      enabled: yes  
      state: started

  when: k8s_cri == "Docker"
  
- name: Install CRI-O
  block:

  - name: Add repository
    yum_repository:
      name: epel
      description: EPEL YUM repo
      baseurl: https://cbs.centos.org/repos/paas7-crio-311-candidate/x86_64/os/

  - name: ModProbe br_netfilter
    modprobe:
      name: br_netfilter
      state: present  

  - name: Install CRI-O package
    package:
      name: cri-o 
      state: latest
      disable_gpg_check: yes

  - name: Start CRI-O
    service:
      name: crio
      enabled: yes  
      state: started

  when: k8s_cri == "CRI-O"
  
- name: Creates /etc/systemd/system/docker.service.d directory
  file: 
    path: /etc/systemd/system/docker.service.d
    state: directory    

- name: Create /etc/systemd/system/docker.service.d/http-proxy.conf
  template:
    src: docker-http-proxy.conf
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
    mode: 0644
  when: k8s_use_proxy==true
    
#- name: Create /etc/systemd/system/docker.service.d/docker-override.conf
#  copy:
#    src: docker-override.conf
#    dest: /etc/systemd/system/docker.service.d/docker-override.conf
#    owner: root
#    group: root
#    mode: 0644

#- name: Create /etc/docker/daemon.json
#  copy:
#    src: k8s-daemon
#    dest: /etc/docker/daemon.json
#    mode: 0644     
  
    
- name: Install kubelet
  yum:
    name: kubelet-{{kubelet_version}}
    state: present
    disable_gpg_check: yes

- name: Install kubeadm
  yum:
    name: kubeadm-{{kubeadm_version}}
    state: present
    disable_gpg_check: yes

- name: Install kubectl
  yum:
    name: kubectl-{{kubectl_version}}
    state: present
    disable_gpg_check: yes
    
- name: "Download {{helm_uri}} -> /tmp/helm-{{helm_version}}-linux-amd64.tar.gz"
  shell: "curl {{helm_uri}} -o/tmp/helm-{{helm_version}}-linux-amd64.tar.gz"
  ignore_errors: "{{ignore_errors}}"  
    
- name: "Expand /tmp/helm-{{helm_version}}-linux-amd64.tar.gz"
  shell: "tar -zxvf helm-{{helm_version}}-linux-amd64.tar.gz"
  args:
    chdir: "/tmp"  
  ignore_errors: "{{ignore_errors}}"  
  
- name: "Move linux-amd64/helm to /usr/local/bin/helm"
  shell: "mv linux-amd64/helm /usr/local/bin/helm"
  args:
    chdir: "/tmp"  
  ignore_errors: "{{ignore_errors}}"     

- name: Setting net.ipv4.ip_forward to 1
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    
- name: Setting net.bridge.bridge-nf-call-iptables to 1
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present

- name: Setting net.bridge.bridge-nf-call-ip6tables to 1
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    state: present

#- name: Configure calico
#  block:
#
#  - name: Creates /etc/cni/net.d directory
#    file: 
#      path: /etc/cni/net.d
#      state: directory 
#
#  - name: Create /etc/cni/net.d/10-calico.conflist
#    copy:
#      src: 10-flannel.conflist
#      dest: /etc/cni/net.d/10-calico.conflist
#      mode: 0644
#  when: k8s_cni_provider == "calico"

#- name: Configure flannel
#  block:
#
#  - name: Creates /etc/cni/net.d directory
#    file: 
#      path: /etc/cni/net.d
#      state: directory 
#
#  - name: Create /etc/cni/net.d/10-flannel.conflist
#    copy:
#      src: 10-flannel.conflist
#      dest: /etc/cni/net.d/10-flannel.conflist
#      mode: 0644
#  when: k8s_cni_provider == "flannel"
    
- name: Start kubelet
  service:
    name: kubelet
    enabled: yes  
    state: started
    
